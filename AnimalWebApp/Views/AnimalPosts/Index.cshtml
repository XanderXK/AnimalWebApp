@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SinInManager
@inject UserManager<IdentityUser> UserManager
@model AnimalWebApp.Models.ViewModels.AnimalPostDetails

@{
    ViewData["Title"] = Model.Title;
}

<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-5">
            <h1 class="mb-3">@Model.Title</h1>

            <div class="d-flex justify-content-between mb-3">
                <span class="text-secondary">@Model.Author</span>
                <span class="text-secondary">@Model.PublishedDate.ToShortDateString()</span>
            </div>

            <img src="@Model.ImageUrl" class="d-block img-fluid mb-3" alt=""/>

            <div class="mb-3">@Html.Raw(Model.Content)</div>

            <div class="mb-3 d-flex animal-content">
                @*TODO: show tags *@
            </div>

            <div id="likeCount" class="mb-3">Likes: @Model.LikeCount</div>

            @if (SinInManager.IsSignedIn(User))
            {
                <a id="btnLike" class="btn me-3 mb-3 bg-dark text-light">Like</a>
            }

            <div class="card">
                <div class="card-header">
                    <h5>Comments</h5>
                    @if (SinInManager.IsSignedIn(User))
                    {
                        <form method="post" asp-action="AddComment">
                            <div class="mb-3">
                                <label class="form-label">Comment Text:</label>
                                <input type="text" class="form-control" name="description" required/>
                            </div>

                            <input type="hidden" name="animalPostId" value="@Model.Id"/>
                            <input type="hidden" name="userId" value="@UserManager.GetUserId(User)"/>

                            <div class="mb-3">
                                <button type="submit" class="btn btn-dark">Submit</button>
                            </div>
                        </form>
                    }
                </div>
                <div class="card-body">
                    @foreach (var comment in Model.Comments)
                    {
                        <div class="card mb-3">
                            <div class="card-body">

                                <div class="d-flex justify-content-between">
                                    <span class="text-secondary">
                                        @{
                                            var user = await UserManager.FindByIdAsync(comment.UserId);
                                            if (user != null)
                                            {
                                                var userName = await UserManager.GetUserNameAsync(user);
                                                @userName
                                            }
                                        }
                                    </span>
                                </div>
                                <div>
                                    @comment.Description
                                </div>

                            </div>
                        </div>
                    }
                </div>

            </div>

        </div>
    </div>
</div>

@section Scripts
{
    <script>
        const btnLikeElement=document.getElementById('btnLike');
        const likeCountElement=document.getElementById('likeCount');
        
        async function getLikeCount()
        {
           await fetch('/api/Like/@Model.Id/likeCount', 
           {
                method: 'Get',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
             },
           })
           .then(data=> data.json())
           .then(result=> likeCountElement.innerHTML ="Likes: "+ result)
        }
        
        async function addLike()
        {
          await  fetch('/api/Like/Add',
            {
                method: 'Post',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
                },
                body: JSON.stringify({animalPostId: '@Model.Id', userId: '@UserManager.GetUserId(User)'})
            }).then(getLikeCount)
        }
        
        btnLikeElement.addEventListener('click', addLike);

    </script>
}